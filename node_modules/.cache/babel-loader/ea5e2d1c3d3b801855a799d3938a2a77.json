{"ast":null,"code":"var _jsxFileName = \"/Users/sjones/Documents/EF/Github/EF-Flashcard-Capstone/src/Layout/Decks/ViewDeck.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { deleteCard, readDeck } from \"../../utils/api\";\nimport NavBar from \"../NavBar\";\nimport EditCard from \"./EditCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewDeck() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [currentDeck, setCurrentDeck] = useState();\n  const [currentCards, setCurrentCards] = useState();\n\n  const handleDeletedCard = id => {\n    if (window.confirm(\"Delete this card? You will not be able to recover it.\")) {\n      deleteCard(id);\n      window.location.reload();\n    }\n  };\n\n  useEffect(() => {\n    async function loadDeck() {\n      try {\n        const response = await readDeck(deckId);\n        setCurrentDeck(response);\n        setCurrentCards(response.cards);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleDeletedDeck = id => {\n    if (window.confirm(\"Delete this deck? You will not be able to recover it.\")) {\n      deleteDeck(id);\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      subLink: `/decks/${deckId}`,\n      subLinkName: `Deck ${currentDeck.name}`,\n      currentPage: \"View Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentDeck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentDeck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}/edit`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}/study`,\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}/cards/new`,\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeletedDeck,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), currentCards.map((eachCard, index) => /*#__PURE__*/_jsxDEV(Card, {\n      card: eachCard,\n      handleDeletedDeck: () => handleDeletedCard()\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewDeck, \"RzoxhGP6NClox5vEmngt3oPPygU=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewDeck;\nexport default ViewDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","deleteCard","readDeck","NavBar","EditCard","ViewDeck","deckId","currentDeck","setCurrentDeck","currentCards","setCurrentCards","handleDeletedCard","id","window","confirm","location","reload","loadDeck","response","cards","error","name","console","log","handleDeletedDeck","deleteDeck","description","map","eachCard","index"],"sources":["/Users/sjones/Documents/EF/Github/EF-Flashcard-Capstone/src/Layout/Decks/ViewDeck.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\nimport { deleteCard, readDeck } from \"../../utils/api\"\nimport NavBar from \"../NavBar\"\nimport EditCard from \"./EditCard\"\n\n\nfunction ViewDeck(){\n    const { deckId } = useParams()\n    const [ currentDeck, setCurrentDeck ] = useState()\n    const [ currentCards, setCurrentCards ] = useState()\n\n    const handleDeletedCard = (id) => {\n        if (window.confirm(\"Delete this card? You will not be able to recover it.\")) {\n            deleteCard(id)\n            window.location.reload()\n         }\n      }\n\n    useEffect(() => {\n        async function loadDeck() {\n            try {\n                const response = await readDeck(deckId)\n                setCurrentDeck(response)\n                setCurrentCards(response.cards)\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                console.log(\"Aborted\")\n                } else {\n                throw error\n                }\n            }\n        }\n        loadDeck()\n    }, [deckId])\n\n\n    const handleDeletedDeck = (id) => {\n        if (window.confirm(\"Delete this deck? You will not be able to recover it.\")) {\n            deleteDeck(id)\n            window.location.reload()\n         }\n      }\n\n    return(\n        <div>\n            <NavBar subLink={`/decks/${deckId}`} subLinkName={`Deck ${currentDeck.name}`} currentPage=\"View Deck\" />\n            <h2>{currentDeck.name}</h2>\n            <p>{currentDeck.description}</p>\n            <div className='d-flex'>\n            <Link to={`/decks/${deckId}/edit`}>Edit</Link>\n            <Link to={`/decks/${deckId}/study`}>Study</Link>\n            <Link to={`/decks/${deckId}/cards/new`}>Add Card</Link>\n            <button onClick={handleDeletedDeck}>Delete</button>\n        </div>\n            {currentCards.map((eachCard, index) => (\n                <Card card={eachCard} key={index} handleDeletedDeck={() => handleDeletedCard()}\n                />\n            ))\n            }\n                \n        </div>\n    )\n}\n\nexport default ViewDeck"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,iBAArC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,SAASC,QAAT,GAAmB;EAAA;;EACf,MAAM;IAAEC;EAAF,IAAaN,SAAS,EAA5B;EACA,MAAM,CAAEO,WAAF,EAAeC,cAAf,IAAkCV,QAAQ,EAAhD;EACA,MAAM,CAAEW,YAAF,EAAgBC,eAAhB,IAAoCZ,QAAQ,EAAlD;;EAEA,MAAMa,iBAAiB,GAAIC,EAAD,IAAQ;IAC9B,IAAIC,MAAM,CAACC,OAAP,CAAe,uDAAf,CAAJ,EAA6E;MACzEb,UAAU,CAACW,EAAD,CAAV;MACAC,MAAM,CAACE,QAAP,CAAgBC,MAAhB;IACF;EACH,CALH;;EAOAnB,SAAS,CAAC,MAAM;IACZ,eAAeoB,QAAf,GAA0B;MACtB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACI,MAAD,CAA/B;QACAE,cAAc,CAACU,QAAD,CAAd;QACAR,eAAe,CAACQ,QAAQ,CAACC,KAAV,CAAf;MACH,CAJD,CAIE,OAAOC,KAAP,EAAc;QACZ,IAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;UACjCC,OAAO,CAACC,GAAR,CAAY,SAAZ;QACC,CAFD,MAEO;UACP,MAAMH,KAAN;QACC;MACJ;IACJ;;IACDH,QAAQ;EACX,CAfQ,EAeN,CAACX,MAAD,CAfM,CAAT;;EAkBA,MAAMkB,iBAAiB,GAAIZ,EAAD,IAAQ;IAC9B,IAAIC,MAAM,CAACC,OAAP,CAAe,uDAAf,CAAJ,EAA6E;MACzEW,UAAU,CAACb,EAAD,CAAV;MACAC,MAAM,CAACE,QAAP,CAAgBC,MAAhB;IACF;EACH,CALH;;EAOA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,OAAO,EAAG,UAASV,MAAO,EAAlC;MAAqC,WAAW,EAAG,QAAOC,WAAW,CAACc,IAAK,EAA3E;MAA8E,WAAW,EAAC;IAA1F;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKd,WAAW,CAACc;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAAId,WAAW,CAACmB;IAAhB;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAK,SAAS,EAAC,QAAf;MAAA,wBACA,QAAC,IAAD;QAAM,EAAE,EAAG,UAASpB,MAAO,OAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,IAAD;QAAM,EAAE,EAAG,UAASA,MAAO,QAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA,QAAC,IAAD;QAAM,EAAE,EAAG,UAASA,MAAO,YAA3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA,eAIA;QAAQ,OAAO,EAAEkB,iBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,EAUKf,YAAY,CAACkB,GAAb,CAAiB,CAACC,QAAD,EAAWC,KAAX,kBACd,QAAC,IAAD;MAAM,IAAI,EAAED,QAAZ;MAAkC,iBAAiB,EAAE,MAAMjB,iBAAiB;IAA5E,GAA2BkB,KAA3B;MAAA;MAAA;MAAA;IAAA,QADH,CAVL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAxDQxB,Q;UACcL,S;;;KADdK,Q;AA0DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}